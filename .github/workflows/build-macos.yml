name: macOS build

on:
  push:
    branches: [ "main" ]
    tags:     'v*'
    paths-ignore:
      - 'doc/**'
      - '.github/**'
      - '*.md'
  workflow_dispatch:

jobs:

  assets:
      runs-on: ubuntu-latest

      steps:
      - uses: actions/checkout@v4

      - name: pack assets
        run: |
          cd common
          ./ScriptzPacker JellyCram.scriptz *.lua
      
      - name: upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: JellyCram.scriptz
          path: common/JellyCram.scriptz

  macosNative:
    needs: [assets]
    runs-on: macos-11

    steps:
    - uses: actions/checkout@v4

    - name: Install dependencies
      run: |
          wget https://sdk.lunarg.com/sdk/download/latest/mac/vulkan-sdk.dmg
          hdiutil attach vulkan-sdk.dmg -mountpoint /Volumes/vulkan-sdk
          mkdir ~/vulkan
          cd /Volumes/vulkan-sdk/
          sudo ./InstallVulkan.app/Contents/macOS/InstallVulkan --root ~/vulkan --accept-licenses --default-answer --confirm-command install
          ls ~/vulkan
          cd ~/vulkan/
          python install_vulkan.py
          brew install md5sha1sum

    - name: get assets
      uses: actions/download-artifact@v4
      with:
        name: JellyCram.scriptz

    - name: macos native build
      run: |
        source version.sh
        ./build.sh -r -o
        mkdir macosbuild
        cp build/JellyCram/JellyCram macosbuild/
        cp JellyCram.scriptz macosbuild/
        cp LICENSE macosbuild/
        cp README.md macosbuild/

    - name: sign build
      run: |
        export GPG_TTY=$(tty)  
        echo "${{ secrets.GPG_KEY }}" > priv
        gpg --pinentry-mode=loopback --passphrase "${{ secrets.GPG_PASS }}" --import priv
        rm priv

        cd macosbuild
        md5sum JellyCram > JellyCram.md5
        md5sum JellyCram.scriptz >> JellyCram.md5

        gpg --pinentry-mode=loopback --passphrase "${{ secrets.GPG_PASS }}" -b JellyCram
        gpg --pinentry-mode=loopback --passphrase "${{ secrets.GPG_PASS }}" -b JellyCram.scriptz
        cd 

    - name: create .app bundle
      run: |
        source version.sh
        mkdir JellyCram.app
        mkdir JellyCram.app/Contents
        mkdir JellyCram.app/Contents/Resources
        mkdir JellyCram.app/Contents/MacOS
        cp macosbuild/JellyCram JellyCram.app/Contents/MacOS
        cp macosbuild/*.sig JellyCram.app/Contents/Resources
        cp macosbuild/*.md5 JellyCram.app/Contents/Resources
        cp macosbuild/*.scriptz JellyCram.app/Contents/Resources
        cp common/macos/icons.icns JellyCram.app/Contents/Resources
        cp common/macos/Info.plist JellyCram.app/Contents/

        cd JellyCram.app/Contents/
        source common/replace.sh Info.plist INFO_STRING "JellyCram (C) Jerboa - GPLv3"
        source common/replace.sh Info.plist EXE JellyCram
        source common/replace.sh Info.plist ID app.jerboa.jellycram
        source common/replace.sh Info.plist NAME JellyCram
        source common/replace.sh Info.plist VERSION "$PRODUCT-$MAJOR.$MINOR.$PATCH"
        cd

    - name: buildArtifact
      uses: actions/upload-artifact@v4
      with:
        name: JellyCram-macos
        path: JellyCram.app